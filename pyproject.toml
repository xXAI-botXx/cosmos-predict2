# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cosmos-predict2"
version = "1.0.9"
authors = [
  {name = "NVIDIA Corporation"},
]
description = "Cosmos World Foundation Model"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: GPU :: NVIDIA CUDA",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
  "attrs==25.1.0",
  "better-profanity==0.7.0",
  "boto3==1.38.31",
  "decord==0.6.0",
  "diffusers==0.33.1",
  "einops==0.8.1",
  "ftfy==6.3.1",
  "fvcore==0.1.5.post20221221",
  "h11==0.16.0",
  "huggingface-hub==0.32.4",
  "hydra-core==1.3.2",
  "imageio[pyav,ffmpeg]==2.37.0",
  "iopath==0.1.10",
  "ipdb==0.13.13",
  "loguru==0.7.3",
  "mediapy==1.2.4",
  "megatron-core==0.12.1",
  "modelscope==1.26.0",
  "nltk==3.9.1",
  "numpy==1.26.4",
  "nvidia-ml-py==12.535.133",
  "omegaconf==2.3.0",
  "opencv-python==4.11.0.86",
  "pandas==2.2.3",
  "peft==0.15.2",
  "pillow==11.1.0",
  "protobuf==4.25.3",
  "pycocotools==2.0.10",
  "pynvml==12.0.0",
  "pyyaml==6.0.2",
  "qwen-vl-utils[decord]==0.0.11",
  "retinaface-py==0.0.2",
  "safetensors==0.5.3",
  "scikit-image==0.25.2",
  "sentencepiece==0.2.0",
  "setuptools",
  "termcolor==3.1.0",
  "tqdm==4.66.5",
  "transformers==4.51.3",
  "triton==3.2.0",
  "webdataset==0.2.111",
]

[project.optional-dependencies]
cu126 = [
  "apex==0.1.0",
  "flash-attn==2.6.3",
  "natten==0.21.0",
  "torch==2.6.0",
  "torchvision==0.21.0",
  "transformer-engine==1.13",
  # Torch dependencies
  # Dependencies determined from `uv pip install "torch==2.6.0" --index-url https://download.pytorch.org/whl/cu126`
  # Issue: https://github.com/astral-sh/uv/issues/14237
  "nvidia-cublas-cu12==12.6.4.1",
  "nvidia-cuda-cupti-cu12==12.6.80",
  "nvidia-cuda-nvrtc-cu12==12.6.77",
  "nvidia-cuda-runtime-cu12==12.6.77",
  "nvidia-cudnn-cu12==9.5.1.17",
  "nvidia-cufft-cu12==11.3.0.4",
  "nvidia-curand-cu12==10.3.7.77",
  "nvidia-cusolver-cu12==11.7.1.2",
  "nvidia-cusparse-cu12==12.5.4.2",
  "nvidia-cusparselt-cu12==0.6.3",
  "nvidia-nccl-cu12==2.21.5",
  "nvidia-nvjitlink-cu12==12.6.85",
  "nvidia-nvtx-cu12==12.6.77",
]

[project.readme]
content-type = "text/markdown"
text = '''
# Cosmos-Predict2

[Documentation](https://github.com/nvidia-cosmos/cosmos-predict2/blob/main/README.md)
'''

[project.urls]
documentation = "https://github.com/nvidia-cosmos/cosmos-predict2/blob/main/README.md"
homepage = "https://research.nvidia.com/labs/dir/cosmos-predict2"
issues = "https://github.com/nvidia-cosmos/cosmos-predict2/issues"
repository = "https://github.com/nvidia-cosmos/cosmos-predict2"

[tool.uv]
environments = [
  "python_version == '3.10' and sys_platform == 'linux' and platform_machine == 'x86_64'",
]
no-build-package = [
  "apex",
  "flash-attn",
  "natten",
  "transformer-engine",
]
required-environments = [
    "python_version == '3.10' and sys_platform == 'linux' and platform_machine == 'x86_64'",
]

[tool.uv.sources]
apex = [
  { index = "cosmos-cu126", extra = "cu126" },
]
flash-attn = [
  { index = "cosmos-cu126", extra = "cu126" },
]
natten = [
  { index = "cosmos-cu126", extra = "cu126" },
]
transformer-engine = [
  { index = "cosmos-cu126", extra = "cu126" },
]
torch = [
  { index = "cosmos-cu126", extra = "cu126" },
]
torchvision = [
  { index = "cosmos-cu126", extra = "cu126" },
]

[[tool.uv.index]]
name = "cosmos-cu126"
url = "https://nvidia-cosmos.github.io/cosmos-dependencies/cu126_torch260/simple"
explicit = true

[tool.hatch.build.targets.sdist]
packages = [
  "cosmos_predict2",
  "imaginaire",
]

[tool.hatch.build.targets.wheel]
packages = [
  "cosmos_predict2",
  "imaginaire",
]
exclude = [
  "*_test.py",
]

[tool.coverage.report]
include_namespace_packages = true
skip_empty = true
omit = [
  "tests/*",
  "legacy/*",
  ".venv/*",
  "**/test_*.py",
  "config.py",
  "config-3.10.py"
]
